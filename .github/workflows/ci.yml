name: CI

on: [push, pull_request]

env:
  OTP_VERSION: 27.0
  ELIXIR_VERSION: 1.17.1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: ./.github/actions/elixir-setup
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Get build cache
        uses: actions/cache/restore@v4
        id: build-cache-restore
        with:
          path: _build/
          key: build-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Compile application
        run: mix compile --all-warnings --warnings-as-errors

      - name: Save build cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: _build/
          key: build-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

  others:
    name: Formatting, Credo, unused deps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: ./.github/actions/elixir-setup
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Check for unused deps
        run: mix deps.unlock --check-unused

      - name: Check code formatting
        run: mix format --check-formatted
        if: always()

      - name: Run Credo
        run: mix credo --strict
        if: always()

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: ./.github/actions/elixir-setup
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore PLT cache
        uses: actions/cache/restore@v4
        id: plt-cache-restore
        with:
          key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-plt
          path: priv/plts

      - name: Create PLTs
        if: steps.plt-cache-restore.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Save PLT cache
        uses: actions/cache/save@v4
        id: plt-cache-save
        with:
          key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-plt
          path: priv/plts

      - name: Run Dialyzer
        run: mix dialyzer